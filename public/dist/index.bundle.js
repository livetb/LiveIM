(()=>{var __webpack_modules__={610:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (/* binding */ _classCallCheck)\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError("Cannot call a class as a function");\n  }\n}\n\n//# sourceURL=webpack://liveim/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js?')},991:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (/* binding */ _createClass)\n/* harmony export */ });\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if ("value" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n//# sourceURL=webpack://liveim/./node_modules/@babel/runtime/helpers/esm/createClass.js?')},484:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (/* binding */ _typeof)\n/* harmony export */ });\nfunction _typeof(obj) {\n  "@babel/helpers - typeof";\n\n  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n//# sourceURL=webpack://liveim/./node_modules/@babel/runtime/helpers/esm/typeof.js?')},757:(module,__unused_webpack_exports,__webpack_require__)=>{eval("module.exports = __webpack_require__(666);\n\n\n//# sourceURL=webpack://liveim/./node_modules/@babel/runtime/regenerator/index.js?")},603:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "ObjectUnit": () => (/* binding */ ObjectUnit)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(484);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(610);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(991);\n\n\n\n\nvar ObjectUnitClass = /*#__PURE__*/function () {\n  function ObjectUnitClass() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__/* .default */ .Z)(this, ObjectUnitClass);\n  }\n\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__/* .default */ .Z)(ObjectUnitClass, [{\n    key: "isNull",\n    value: function isNull(obj) {\n      if (!obj || obj === undefined || obj === null) return true;\n      return false;\n    }\n  }, {\n    key: "isObject",\n    value: function isObject(obj) {\n      if (this.isNull(obj)) return false;\n      if ((0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_2__/* .default */ .Z)(obj) !== \'object\') return false;\n      return true;\n    }\n  }, {\n    key: "isEmptyObject",\n    value: function isEmptyObject(obj) {\n      if (!this.isObject(obj)) return false;\n      if (Object.keys(obj).length > 0) return false;\n      return true;\n    }\n  }, {\n    key: "isNoEmptyObject",\n    value: function isNoEmptyObject(obj) {\n      if (!this.isObject(obj)) return false;\n      if (Object.keys(obj).length < 1) return false;\n      return true;\n    }\n  }, {\n    key: "isNumber",\n    value: function isNumber(num) {\n      if (String(num) === \'NaN\') return false;\n      return typeof num === \'number\';\n    }\n  }, {\n    key: "isString",\n    value: function isString(str) {\n      return typeof str === \'string\';\n    }\n  }, {\n    key: "isEmptyString",\n    value: function isEmptyString(str) {\n      if (this.isNull(str)) return true;\n      if (!this.isString(str)) return true;\n      if (str.trim().length < 1) return true;\n      return false;\n    }\n  }, {\n    key: "isNoEmptyString",\n    value: function isNoEmptyString(str) {\n      return !this.isEmptyString(str);\n    }\n  }]);\n\n  return ObjectUnitClass;\n}();\n\nvar ObjectUnit = new ObjectUnitClass();\n\n\n//# sourceURL=webpack://liveim/./webpack_src/assets/js/unit/ObjectUnit.js?')},410:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";eval('\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\nvar classCallCheck = __webpack_require__(610);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js\nvar createClass = __webpack_require__(991);\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/regenerator/index.js\nvar regenerator = __webpack_require__(757);\nvar regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === "string") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === "Object" && o.constructor) n = o.constructor.name;\n  if (n === "Map" || n === "Set") return Array.from(o);\n  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js\nfunction _nonIterableSpread() {\n  throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\n\n\n\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n// EXTERNAL MODULE: ./webpack_src/assets/js/unit/ObjectUnit.js\nvar ObjectUnit = __webpack_require__(603);\n;// CONCATENATED MODULE: ./webpack_src/components/UserList/UserWrap.js\n\n\n\n\n\n\n\n\nvar UserWrap = /*#__PURE__*/function () {\n  /**@type { UserInfo } */\n\n  /**\r\n   * @type {{\r\n   *  classList: String[],\r\n   *  ele: HTMLElement,\r\n   *  input: HTMLElement,\r\n   *  badge: HTMLElement,\r\n   * }}\r\n   */\n\n  /**\r\n   * @param { UserInfo } user \r\n   */\n  function UserWrap(user) {\n    (0,classCallCheck/* default */.Z)(this, UserWrap);\n\n    _defineProperty(this, "user", void 0);\n\n    _defineProperty(this, "config", {\n      classList: [\'user-wrap\'],\n      ele: null,\n      input: null,\n      badge: null\n    });\n\n    _defineProperty(this, "on", {\n      change: null,\n      selected: null\n    });\n\n    // super();\n    this.user = user;\n    this.init();\n  }\n\n  (0,createClass/* default */.Z)(UserWrap, [{\n    key: "init",\n    value: function init() {\n      // console.log(\'UserWrap: init.\');\n      this.initView();\n    }\n  }, {\n    key: "initView",\n    value: function initView() {\n      var _ele$classList;\n\n      if (ObjectUnit.ObjectUnit.isEmptyObject(this.user)) return; // console.log(\'UserWrap.initView: \', { user: this.user, config: this.config});\n\n      var user = this.user;\n      var config = this.config;\n      var ele = config.ele;\n      if (ele) return;\n      ele = document.createElement(\'label\');\n\n      (_ele$classList = ele.classList).add.apply(_ele$classList, _toConsumableArray(config.classList));\n\n      ele.innerHTML = "\\n    <input uid=\\"".concat(user.uid, "\\" type=\\"radio\\" name=\\"list-user\\" >\\n    <div class=\\"user\\">\\n      <div class=\\"avatar-wrap\\">\\n        <div class=\\"rectangle-box square\\">\\n          <div class=\\"avatar no1\\">\\n            <img src=\\"").concat(user.avatar, "\\" />\\n          </div>\\n          <div class=\\"badge no2\\">\\xB7</div>\\n        </div>\\n      </div>\\n      <div class=\\"message-wrap\\">\\n        <h2 class=\\"name\\">").concat(user.nickname, "</h2>\\n        <p class=\\"last-message\\">").concat(user.lastMessage, "</p>\\n      </div>\\n    </div>\\n    ");\n      config.ele = ele;\n      config.badge = ele.querySelector(\'.badge\');\n      config.input = ele.querySelector(\'input\');\n      var that = this;\n      config.input.addEventListener(\'change\', function () {\n        var is_checked = this.checked;\n        var param = {\n          is_checked: is_checked,\n          uid: that.user.uid\n        };\n        that.notifyListener(\'change\', param);\n        that.notifyListener(\'selected\', param);\n      });\n    }\n  }, {\n    key: "getElement",\n    value: function getElement() {\n      return this.config.ele;\n    }\n    /**\r\n     * @param { \'change\' | \'selected\' } event_name \r\n     * @param { Function({ is_checked: Boolean, uid: String }) } callback \r\n     */\n\n  }, {\n    key: "setListener",\n    value: function setListener(event_name, callback) {\n      this.on[event_name] = callback;\n    }\n    /**\r\n     * @param { \'change\' | \'selected\' } event_name\r\n     * @param { { is_checked: Boolean, uid: String } } param\r\n     */\n\n  }, {\n    key: "notifyListener",\n    value: function notifyListener(event_name, param) {\n      var callback = this.on[event_name];\n      if (typeof callback === \'function\') callback(param);\n    }\n  }, {\n    key: "checked",\n    value: function checked() {\n      this.config.input.checked = true;\n    }\n  }, {\n    key: "updateBadge",\n    value: function updateBadge(num) {\n      var badge = this.config.badge;\n\n      if (num > 0) {\n        badge.classList.remove(\'hide-ele\');\n        badge.innerText = num;\n      } else {\n        badge.classList.add(\'hide-ele\');\n      }\n    }\n  }]);\n\n  return UserWrap;\n}();\n\n\n;// CONCATENATED MODULE: ./webpack_src/components/UserList/index.js\n\n\n\n\n\n\n\n\nvar UserList = /*#__PURE__*/function () {\n  /**\r\n   * @type {{\r\n   *  id: String, classList: String[], ele: HTMLElement,\r\n   * }}\r\n   */\n\n  /**\r\n   * @type { Map<String, {\r\n   *  created_time: Number,\r\n   *  updated_time: Number,\r\n   *  user: UserInfo,\r\n   *  user_wrap: UserWrap,\r\n   * }> }\r\n   */\n  function UserList(id, classList) {\n    var _this$config$classLis;\n\n    (0,classCallCheck/* default */.Z)(this, UserList);\n\n    _defineProperty(this, "config", {\n      id: \'user_list\',\n      classList: [\'user-list\'],\n      ele: null\n    });\n\n    _defineProperty(this, "UserMap", new Map());\n\n    _defineProperty(this, "on", {\n      changed_user: null\n    });\n\n    if (typeof id === \'string\') this.config.id = id;\n    if (Array.isArray(classList)) (_this$config$classLis = this.config.classList).push.apply(_this$config$classLis, _toConsumableArray(classList));\n    this.init();\n  }\n\n  (0,createClass/* default */.Z)(UserList, [{\n    key: "init",\n    value: function init() {\n      this.initView();\n    }\n  }, {\n    key: "initView",\n    value: function initView() {\n      var _ele$classList;\n\n      var config = this.config;\n      var ele = config.ele;\n      if (ele) return;\n      ele = document.createElement(\'div\');\n      ele.id = config.id;\n\n      (_ele$classList = ele.classList).add.apply(_ele$classList, _toConsumableArray(config.classList));\n\n      config.ele = ele;\n    }\n  }, {\n    key: "getElement",\n    value: function getElement() {\n      return this.config.ele;\n    }\n    /**\r\n     * @param { UserInfo } user \r\n     */\n\n  }, {\n    key: "appendUser",\n    value: function appendUser(user) {\n      var _this = this;\n\n      if (ObjectUnit.ObjectUnit.isEmptyObject(user)) return;\n      var cur = this.UserMap.get(user.uid);\n\n      if (!cur) {\n        cur = {\n          created_time: Date.now(),\n          user: user\n        };\n        cur.user_wrap = new UserWrap(user);\n        cur.user_wrap.setListener(\'selected\', function (param) {\n          _this.UserMap.get(user.uid).user_wrap.updateBadge(0);\n\n          if (!param.is_checked) return;\n\n          _this.notifyListener(\'changed_user\', {\n            is_checked: true,\n            user: user\n          });\n        });\n        cur.user_wrap.updateBadge(1);\n        this.config.ele.appendChild(cur.user_wrap.getElement());\n        this.UserMap.set(user.uid, cur);\n      }\n\n      cur.updated_time = Date.now();\n      if (cur.user.lastMessage !== user.lastMessage) cur.user_wrap.updateBadge(1);\n      cur.user = user;\n\n      if (this.UserMap.size === 1) {\n        cur.user_wrap.checked();\n        this.notifyListener(\'changed_user\', {\n          is_checked: true,\n          user: cur.user\n        });\n      }\n    }\n    /**\r\n     * @param { \'changed_user\' } event_name \r\n     * @param { Function({ is_checked: Boolean, uid: String }) } callback \r\n     */\n\n  }, {\n    key: "setListener",\n    value: function setListener(event_name, callback) {\n      this.on[event_name] = callback;\n    }\n    /**\r\n     * @param { \'changed_user\' } event_name \r\n     * @param { Function({ is_checked: Boolean, user: UserInfo }) } param \r\n     */\n\n  }, {\n    key: "notifyListener",\n    value: function notifyListener(event_name, param) {\n      var callback = this.on[event_name];\n      if (typeof callback === \'function\') callback(param);\n    }\n  }]);\n\n  return UserList;\n}();\n\n\n;// CONCATENATED MODULE: ./webpack_src/components/ChatRoom/SendMessage.js\n\n\n\n\n\nvar _require = __webpack_require__(603),\n    SendMessage_ObjectUnit = _require.ObjectUnit;\n\nvar SendMessage = /*#__PURE__*/function () {\n  /**\r\n   * @type {{\r\n   *  id: String,\r\n   *  ele: HTMLElement,\r\n   *  classList: String[],\r\n   *  text_input: HTMLElement,\r\n   *  button: {\r\n   *    send_text: HTMLElement,\r\n   *    send_image: HTMLElement,\r\n   *  }\r\n   * }}\r\n   */\n  function SendMessage() {\n    (0,classCallCheck/* default */.Z)(this, SendMessage);\n\n    _defineProperty(this, "config", {\n      id: \'send_message_wrap\',\n      ele: null,\n      classList: [\'send-message-wrap\'],\n      text_input: null,\n      button: {\n        send_text: null,\n        send_image: null\n      }\n    });\n\n    _defineProperty(this, "on", {\n      send_text: null,\n      send_image: null\n    });\n\n    _defineProperty(this, "already", {\n      init: {\n        view: false\n      }\n    });\n\n    this.init();\n  }\n\n  (0,createClass/* default */.Z)(SendMessage, [{\n    key: "init",\n    value: function init() {\n      this.initView();\n      this.bindListener(); // console.log(\'SendMessage: \', this);\n    }\n  }, {\n    key: "initView",\n    value: function initView() {\n      var _ele$classList;\n\n      if (this.already.init.view) return;\n      var config = this.config;\n      var ele = document.createElement(\'div\');\n      config.ele = ele;\n      ele.id = config.id;\n\n      (_ele$classList = ele.classList).add.apply(_ele$classList, _toConsumableArray(config.classList));\n\n      ele.innerHTML = "\\n    <div class=\\"input-wrap\\">\\n      <textarea class=\\"text-input\\"></textarea>\\n    </div>\\n    <div class=\\"button-wrap\\">\\n      <label class=\\"file-label\\">\\n        <input type=\\"file\\" accept=\\"image/*\\">\\n        <span class=\\"button choose-file\\">Choose Image</span>\\n      </label>\\n      <button class=\\"button send-message\\">Send Message</button>\\n    </div>\\n    ";\n      config.text_input = ele.querySelector(\'.text-input\');\n      config.button.send_text = ele.querySelector(\'.send-message\');\n      config.button.send_image = ele.querySelector(\'.file-label input\');\n      this.already.init.view = true;\n    }\n  }, {\n    key: "bindListener",\n    value: function bindListener() {\n      var _this = this;\n\n      var config = this.config;\n      var that = this; // \n\n      config.button.send_text.addEventListener(\'click\', function () {\n        var text = _this.config.text_input.value;\n        if (SendMessage_ObjectUnit.isEmptyString(text)) return;\n        console.log(\'send text: \', text);\n\n        _this.notifyListener(\'send_text\', {\n          created_time: Date.now(),\n          data: text\n        });\n\n        _this.config.text_input.value = \'\';\n      }); // \n\n      config.button.send_image.addEventListener(\'input\', function () {\n        /**@type { File } */\n        var file = this.files && this.files[0];\n        if (!file) return;\n        if (!/image/.test(file.type)) return;\n        console.log(\'send image: \', file);\n        that.notifyListener(\'send_image\', {\n          created_time: Date.now(),\n          data: file\n        });\n        this.value = \'\';\n      });\n    }\n  }, {\n    key: "getElement",\n    value: function getElement() {\n      return this.config.ele;\n    }\n    /**\r\n     * @param { \'send_text\' | \'send_image\' } event_name \r\n     * @param { Function } callback \r\n     */\n\n  }, {\n    key: "setListener",\n    value: function setListener(event_name, callback) {\n      this.on[event_name] = callback;\n    }\n    /**\r\n     * @param { \'send_text\' | \'send_image\' } event_name \r\n     */\n\n  }, {\n    key: "notifyListener",\n    value: function notifyListener(event_name, param) {\n      var callback = this.on[event_name];\n      if (typeof callback === \'function\') callback(param);\n    }\n  }]);\n\n  return SendMessage;\n}();\n\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js\nvar esm_typeof = __webpack_require__(484);\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/classApplyDescriptorGet.js\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n\n  return descriptor.value;\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/classExtractFieldDescriptor.js\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError("attempted to " + action + " private field on non-instance");\n  }\n\n  return privateMap.get(receiver);\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js\n\n\nfunction _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get");\n  return _classApplyDescriptorGet(receiver, descriptor);\n}\n;// CONCATENATED MODULE: ./webpack_src/assets/js/unit/DateUnit.js\n\n\n\n\nvar DateUnitClass = /*#__PURE__*/function () {\n  function DateUnitClass() {\n    (0,classCallCheck/* default */.Z)(this, DateUnitClass);\n\n    _defineProperty(this, "default_format_str", \'yyyy-MM-dd HH:mm:ss:ms\');\n  }\n\n  (0,createClass/* default */.Z)(DateUnitClass, [{\n    key: "format",\n    value:\n    /**\r\n     * \r\n     * @param { Date | Number } date_obj \r\n     * @param { String } format_str \r\n     * @param { \'date\' | \'time\' | \'datetime\' } type \r\n     * @returns \r\n     */\n    function format(date_obj, format_str, type) {\n      if (!type && !format_str) format_str = "yyyy-MM-dd HH:mm:ss:ms";else if ("date" === type) format_str = "yyyy-MM-dd";else if ("time" === type) format_str = "HH:mm:ss";else if ("datetime" === type) format_str = "yyyy-MM-dd HH:mm:ss";\n      if (!date_obj) date_obj = new Date();else if (typeof date_obj === \'number\') date_obj = new Date(date_obj);\n      var month = date_obj.getMonth() + 1;\n      var day = date_obj.getDate();\n      var hours = date_obj.getHours();\n      var minutes = date_obj.getMinutes();\n      var seconds = date_obj.getSeconds();\n      format_str = format_str.replace("yyyy", date_obj.getFullYear());\n      format_str = format_str.replace("MM", "".concat(month > 9 ? "" : 0).concat(month));\n      format_str = format_str.replace("dd", "".concat(day > 9 ? "" : 0).concat(day));\n      format_str = format_str.replace("HH", "".concat(hours > 9 ? "" : 0).concat(hours));\n      format_str = format_str.replace("mm", "".concat(minutes > 9 ? "" : 0).concat(minutes));\n      format_str = format_str.replace("ss", "".concat(seconds > 9 ? "" : 0).concat(seconds));\n      format_str = format_str.replace("ms", date_obj.getMilliseconds());\n      return format_str;\n    }\n  }]);\n\n  return DateUnitClass;\n}();\n\nvar DateUnit = new DateUnitClass();\n\n;// CONCATENATED MODULE: ./webpack_src/assets/js/bean/Message.js\n\n\n\n\n\n\n\n\nvar _config = new WeakMap();\n\nvar Message = /*#__PURE__*/function () {\n  /**@type { Number } */\n\n  /**@type { Number } */\n\n  /**@type { String } */\n\n  /**@type { Number } */\n\n  /**@type { String } */\n\n  /**@type { { is_self: Boolean, avatar: avatar } } */\n\n  /**\r\n   * \r\n   * @param { Number } timestamp \r\n   * @param { String } message \r\n   * @param { Number } messageType \r\n   */\n  function Message(message_obj) {\n    var user_info = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    (0,classCallCheck/* default */.Z)(this, Message);\n\n    _defineProperty(this, "id", void 0);\n\n    _defineProperty(this, "timestamp", void 0);\n\n    _defineProperty(this, "message", void 0);\n\n    _defineProperty(this, "messageType", void 0);\n\n    _defineProperty(this, "fromUid", void 0);\n\n    _defineProperty(this, "user_info", {\n      is_self: null,\n      avatar: null\n    });\n\n    _config.set(this, {\n      writable: true,\n      value: {\n        /**@type { HTMLElement } */\n        ele: null,\n        classList: [\'chat-record\']\n      }\n    });\n\n    if (message_obj && (0,esm_typeof/* default */.Z)(message_obj) === \'object\') {\n      var id = message_obj.id,\n          timestamp = message_obj.timestamp,\n          message = message_obj.message,\n          messageType = message_obj.messageType;\n      this.id = id;\n      this.timestamp = timestamp;\n      this.message = message;\n      this.messageType = messageType;\n    }\n\n    this.user_info = user_info;\n    this.init();\n  }\n\n  (0,createClass/* default */.Z)(Message, [{\n    key: "init",\n    value: function init() {\n      this.initView();\n    }\n    /**\r\n     * @param { String} message \r\n     * @param { 0 | 1 | 2 | 4| 13} type \r\n     */\n\n  }, {\n    key: "renderMessageContent",\n    value: function renderMessageContent(message) {\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var result = \'\';\n\n      switch (type) {\n        case 0:\n          {\n            result = "<p class=\\"content text\\">".concat(message, "</p>");\n          }\n          ;\n          break;\n\n        case 2:\n          {\n            result = "<img class=\\"content image\\" src=\\"".concat(message, "\\" />");\n          }\n          ;\n          break;\n\n        default:\n          {\n            result = "<p style=\\"color: red;\\" class=\\"content text\\">".concat(message, "</p>");\n          }\n      }\n\n      return result;\n    }\n  }, {\n    key: "initView",\n    value: function initView() {\n      var _ele$classList;\n\n      var config = _classPrivateFieldGet(this, _config);\n\n      var ele = document.createElement(\'div\');\n\n      (_ele$classList = ele.classList).add.apply(_ele$classList, _toConsumableArray(config.classList));\n\n      if (this.user_info.is_self) ele.classList.add(\'self\');\n      ele.setAttribute(\'message-id\', this.id);\n      ele.innerHTML = "\\n    <div class=\\"avatar-wrap\\">\\n      <div class=\\"rectangle-box square\\">\\n        <div class=\\"avatar no1\\">\\n          <img src=\\"".concat(this.user_info.avatar, "\\" />\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\"message-wrap\\">\\n      <div class=\\"info\\">\\n        <p class=\\"item\\">").concat(DateUnit.format(this.timestamp), "</p>\\n        <p class=\\"item\\"> MessageType: ").concat(this.messageType, "</p>\\n      </div>\\n      <div class=\\"message ").concat(this.messageType === 13 ? \'video-call\' : \'\', "\\">\\n        ").concat(this.renderMessageContent(this.message, this.messageType), "\\n      </div>\\n    </div>\\n    ");\n      config.ele = ele;\n    }\n  }, {\n    key: "getElement",\n    value: function getElement() {\n      return _classPrivateFieldGet(this, _config).ele;\n    }\n  }]);\n\n  return Message;\n}();\n\n\n;// CONCATENATED MODULE: ./webpack_src/assets/js/common/index.js\nvar DefaultConfig = {\n  avatar: \'https://storage.googleapis.com/livehub-xyz/Livetube_undefined_20210325064114_cover.png\'\n};\n\n;// CONCATENATED MODULE: ./webpack_src/components/ChatRoom/ChatRecordList.js\n\n\n\n\n\n\n\nvar ChatRecordList = /*#__PURE__*/function () {\n  /**\r\n   * @type {{\r\n   *  ele: HTMLElement,\r\n   *  classList: String[],\r\n   *  message_list: Message[],\r\n   *  send_message_id: Number,\r\n   * }}\r\n   */\n\n  /**\r\n   * @type { Map<String, {\r\n   *  status: \'pending\' | \'failed\', \'success\',\r\n   *  message: Message,\r\n   *  ele: HTMLElement,\r\n   * }}\r\n   */\n\n  /**@type { String } */\n  function ChatRecordList(uid) {\n    (0,classCallCheck/* default */.Z)(this, ChatRecordList);\n\n    _defineProperty(this, "config", {\n      ele: null,\n      classList: [\'chat-record-list\'],\n      message_list: [],\n      send_message_id: 10000\n    });\n\n    _defineProperty(this, "already", {\n      init: {\n        view: false\n      }\n    });\n\n    _defineProperty(this, "MessageMap", new Map());\n\n    _defineProperty(this, "uid", void 0);\n\n    this.uid = uid;\n    this.init();\n  }\n\n  (0,createClass/* default */.Z)(ChatRecordList, [{\n    key: "init",\n    value: function init() {\n      this.initView();\n    }\n  }, {\n    key: "initView",\n    value: function initView() {\n      var _ele$classList;\n\n      var config = this.config;\n      var ele = document.createElement(\'div\');\n      ele.setAttribute(\'uid\', this.uid);\n\n      (_ele$classList = ele.classList).add.apply(_ele$classList, _toConsumableArray(config.classList));\n\n      config.ele = ele;\n    }\n  }, {\n    key: "getElement",\n    value: function getElement() {\n      return this.config.ele;\n    }\n    /**\r\n     * @param { Message | Message[] } message \r\n     * @param { { is_self: Boolean, avatar: avatar } } user_info\r\n     */\n\n  }, {\n    key: "appendRecord",\n    value: function appendRecord(message, user_info) {\n      var _this = this;\n\n      if (user_info.is_self) console.log("send message to: ".concat(this.uid, ": "), message);\n      console.log(\'appendRecord: \', {\n        message: message,\n        user_info: user_info\n      });\n      if (!Array.isArray(message)) message = [message];\n      message.forEach(function (msg) {\n        if (!msg.id) msg.id = _this.config.send_message_id++;\n        var cur_user_info = {\n          is_self: false,\n          avatar: user_info.avatar\n        };\n\n        if (msg.fromUid !== _this.uid) {\n          // console.log(\'No same uid: \', { from: message.fromUid, self: this.uid});\n          cur_user_info.is_self = true;\n          cur_user_info.avatar = DefaultConfig.avatar;\n        }\n\n        var message_ele = new Message(msg, cur_user_info);\n        var ele = message_ele.getElement();\n        var status = cur_user_info.is_self ? \'pending\' : \'success\';\n        ele.classList.add(status);\n\n        _this.MessageMap.set(message.id, {\n          status: \'pending\',\n          message: msg,\n          ele: ele\n        });\n\n        _this.config.ele.appendChild(ele);\n      });\n    }\n    /**\r\n     * @param { Number } message_id \r\n     * @param { \'pending\' | \'failed\', \'success\' } status \r\n     * @returns \r\n     */\n\n  }, {\n    key: "changeRecordStatus",\n    value: function changeRecordStatus(message_id, status) {\n      var obj = this.MessageMap.get(message_id);\n      var ele = obj && obj.ele;\n      if (!ele) return;\n      ele.classList.add(status);\n    }\n  }, {\n    key: "hide",\n    value: function hide() {\n      this.config.ele.classList.add(\'hide-ele\'); // console.log(`hide ${this.uid}: `, this.config);\n    }\n  }, {\n    key: "show",\n    value: function show() {\n      this.config.ele.classList.remove(\'hide-ele\'); // console.log(`show ${this.uid}: `, this.config);\n    }\n  }]);\n\n  return ChatRecordList;\n}();\n\n\n;// CONCATENATED MODULE: external "axios"\nconst external_axios_namespaceObject = axios;\nvar external_axios_default = /*#__PURE__*/__webpack_require__.n(external_axios_namespaceObject);\n;// CONCATENATED MODULE: ./webpack_src/assets/js/unit/Server.js\n\n\n\n\n\nvar is_test = true;\nvar config = {\n  baseURL: is_test ? \'https://t.livego.live\' : \'https://t.livego.live\'\n};\n(external_axios_default()).defaults.baseURL = config.baseURL;\n(external_axios_default()).defaults.headers.common.authorization = "wgrdg78386a";\nexternal_axios_default().interceptors.response.use(function (response) {\n  var res = response.data; // console.log("AxiosResposne => ", res);\n  // if(res.status === 413){\n  //     handleStatus413();\n  //     return;\n  // }\n  // if(res.status === 0) res.success = true;\n\n  return res;\n}, function (error) {\n  return Promise.reject(error);\n});\n\nvar ServerUnit = /*#__PURE__*/function () {\n  function ServerUnit() {\n    (0,classCallCheck/* default */.Z)(this, ServerUnit);\n  }\n  /**\r\n   * @param { {"query":{},"pageSize":20,"pageNum":1} } param \r\n   * @returns { Promise<{ status: Number, data: UserInfo[]}> }\r\n   */\n\n\n  (0,createClass/* default */.Z)(ServerUnit, [{\n    key: "getMessageUserList",\n    value: function getMessageUserList() {\n      var param = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        "query": {},\n        "pageSize": 20,\n        "pageNum": 1\n      };\n      return external_axios_default().post(\'/api2/message/user/list\', param);\n    }\n    /**\r\n     * @param { {"query":{"relateUid":3901604053073969},"pageSize":20,"pageNum":1} } param \r\n     * @returns { Promise<{ status: Number, data: Message[]}> }\r\n     */\n\n  }, {\n    key: "getUserMessageDetail",\n    value: function getUserMessageDetail() {\n      var param = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        "query": {\n          "relateUid": 3901604053073969\n        },\n        "pageSize": 20,\n        "pageNum": 1\n      };\n      return external_axios_default().post(\'/api2/message/user/detail\', param);\n    }\n    /**\r\n     * @param { String } relateUid \r\n     * @param { String } content \r\n     * @param { 0 | 1 | 3 } messageType \r\n     * @returns { Promise<{ status: Number, msg: String}> }\r\n     */\n\n  }, {\n    key: "sendMessage",\n    value: function sendMessage(relateUid, content) {\n      var messageType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var param = {\n        relateUid: relateUid,\n        content: content,\n        messageType: messageType\n      };\n      return external_axios_default().post(\'/api/message/send\', param);\n    }\n    /**\r\n     * \r\n     * @param { File } filename \r\n     * @param { String } relateUid \r\n     * @param { 1 | 2 | 4 } messageType - 2: 图片\r\n     * @returns { Promise<{ status: Number, msg: String}> }\r\n     */\n\n  }, {\n    key: "sendMediaMessage",\n    value: function sendMediaMessage(filename, relateUid, messageType) {\n      var param = {\n        filename: filename,\n        relateUid: relateUid,\n        messageType: messageType\n      };\n      return external_axios_default().post(\'/api/uploadMedia\');\n    }\n  }]);\n\n  return ServerUnit;\n}();\n\nvar Server = new ServerUnit();\n\n;// CONCATENATED MODULE: ./webpack_src/components/ChatRoom/index.js\n\n\n\n\n\n\n\n\n\n\n\nvar ChatRoom = /*#__PURE__*/function () {\n  /**\r\n   * @type {{\r\n   *  id: String, classList: String[], ele: HTMLElement,\r\n   * }}\r\n   */\n\n  /**\r\n   * @type { Map<String, {\r\n   *  is_bind_listener: Boolean,\r\n   *  list: ChatRecordList,\r\n   * }> }\r\n   */\n\n  /**@type { ChatRecordList } */\n\n  /**@type { SendMessage } */\n  function ChatRoom() {\n    (0,classCallCheck/* default */.Z)(this, ChatRoom);\n\n    _defineProperty(this, "config", {\n      id: \'chat_room\',\n      classList: [\'chat-room\'],\n      ele: null\n    });\n\n    _defineProperty(this, "already", {\n      init: {\n        view: false\n      }\n    });\n\n    _defineProperty(this, "RecordListMap", new Map());\n\n    _defineProperty(this, "curChatRecordList", void 0);\n\n    _defineProperty(this, "sendMessage", void 0);\n\n    this.sendMessage = new SendMessage();\n    this.init();\n  }\n\n  (0,createClass/* default */.Z)(ChatRoom, [{\n    key: "init",\n    value: function init() {\n      this.initView();\n      this.bindListener();\n    }\n  }, {\n    key: "initView",\n    value: function initView() {\n      var _ele$classList;\n\n      if (this.already.init.view === true) return;\n      var ele = document.createElement(\'div\');\n\n      (_ele$classList = ele.classList).add.apply(_ele$classList, _toConsumableArray(this.config.classList));\n\n      this.config.ele = ele;\n      ele.appendChild(this.sendMessage.getElement());\n      this.already.init.view = true;\n    }\n  }, {\n    key: "bindListener",\n    value: function bindListener() {\n      var _this = this;\n\n      var default_avatar = \'https://sw.cool3c.com//99588/2018/7f8bb260-943c-4b9d-b58b-4ed782c8761a.jpg?fit=max&w=800&q=80\';\n      this.sendMessage.setListener(\'send_text\', function (param) {\n        var _this$curChatRecordLi;\n\n        if (!((_this$curChatRecordLi = _this.curChatRecordList) !== null && _this$curChatRecordLi !== void 0 && _this$curChatRecordLi.uid)) return;\n        Server.sendMessage(_this.curChatRecordList.uid, param.data, 0);\n\n        _this.curChatRecordList.appendRecord({\n          timestamp: param.created_time,\n          message: param.data,\n          messageType: 0\n        }, {\n          is_self: true,\n          avatar: default_avatar\n        });\n      });\n      this.sendMessage.setListener(\'send_image\', function (param) {\n        var _this$curChatRecordLi2;\n\n        if (!((_this$curChatRecordLi2 = _this.curChatRecordList) !== null && _this$curChatRecordLi2 !== void 0 && _this$curChatRecordLi2.uid)) return;\n        Server.sendMediaMessage(param.data, _this.curChatRecordList.uid, 2);\n\n        _this.curChatRecordList.appendRecord({\n          timestamp: param.created_time,\n          message: URL.createObjectURL(param.data),\n          messageType: 2\n        }, {\n          is_self: true,\n          avatar: default_avatar\n        });\n      });\n    }\n  }, {\n    key: "getElement",\n    value: function getElement() {\n      return this.config.ele;\n    }\n    /**\r\n     * @param { UserInfo } user \r\n     */\n\n  }, {\n    key: "notifyUserChaned",\n    value: function () {\n      var _notifyUserChaned = _asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee(user) {\n        var _this$curChatRecordLi3, _this$RecordListMap$g;\n\n        var uid, avatar, curChatRecordList, _yield$Server$getUser, status, data;\n\n        return regenerator_default().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\'notifyUserChaned: \', user);\n\n                if (user) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt("return");\n\n              case 3:\n                uid = user.uid, avatar = user.avatar;\n                (_this$curChatRecordLi3 = this.curChatRecordList) === null || _this$curChatRecordLi3 === void 0 ? void 0 : _this$curChatRecordLi3.hide();\n                curChatRecordList = (_this$RecordListMap$g = this.RecordListMap.get(uid)) === null || _this$RecordListMap$g === void 0 ? void 0 : _this$RecordListMap$g.list;\n\n                if (curChatRecordList) {\n                  _context.next = 20;\n                  break;\n                }\n\n                curChatRecordList = new ChatRecordList(uid);\n                this.config.ele.insertBefore(curChatRecordList.getElement(), this.sendMessage.getElement());\n                this.RecordListMap.set(uid, {\n                  list: curChatRecordList\n                });\n                _context.next = 12;\n                return Server.getUserMessageDetail({\n                  query: {\n                    relateUid: uid\n                  },\n                  pageSize: 20,\n                  pageNum: 1\n                });\n\n              case 12:\n                _yield$Server$getUser = _context.sent;\n                status = _yield$Server$getUser.status;\n                data = _yield$Server$getUser.data;\n\n                if (!(status !== 0 || !Array.isArray(data))) {\n                  _context.next = 17;\n                  break;\n                }\n\n                return _context.abrupt("return");\n\n              case 17:\n                data.reverse();\n                curChatRecordList.appendRecord(data, {\n                  is_self: false,\n                  avatar: avatar\n                });\n                console.log(\'message detail: \', data);\n\n              case 20:\n                this.curChatRecordList = curChatRecordList;\n                curChatRecordList.show();\n\n              case 22:\n              case "end":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function notifyUserChaned(_x) {\n        return _notifyUserChaned.apply(this, arguments);\n      }\n\n      return notifyUserChaned;\n    }()\n  }]);\n\n  return ChatRoom;\n}();\n\n\n;// CONCATENATED MODULE: ./webpack_src/pages/index/index.js\n\n\n\n\n\n\n\n\n\nvar user_list_arr = [{\n  id: 10001,\n  uid: 12345,\n  nickname: \'Jack Ma\',\n  avatar: \'https://sw.cool3c.com/user/99588/2018/7f8bb260-943c-4b9d-b58b-4ed782c8761a.jpg\'\n}, {\n  id: 10002,\n  uid: 12346,\n  nickname: \'Pony Ma\',\n  avatar: \'https://sw.cool3c.com/user/99588/2018/7f8bb260-943c-4b9d-b58b-4ed782c8761a.jpg\'\n}, {\n  id: 10003,\n  uid: 12347,\n  nickname: \'Wang Jianlin\',\n  avatar: \'https://sw.cool3c.com/user/99588/2018/7f8bb260-943c-4b9d-b58b-4ed782c8761a.jpg\'\n}];\n\nvar ThePage = /*#__PURE__*/function () {\n  /**@type { UserList } */\n\n  /**@type { ChatRoom } */\n  function ThePage() {\n    (0,classCallCheck/* default */.Z)(this, ThePage);\n\n    _defineProperty(this, "config", {\n      /**@type { HTMLElement } */\n      ele: null,\n\n      /**@type { HTMLElement } */\n      parent: null,\n\n      /**@type { String } */\n      parent_cssSelector: \'#chat_block\'\n      /**@type { HTMLElement } */\n\n    });\n\n    _defineProperty(this, "already", {\n      init: {\n        view: false\n      }\n    });\n\n    _defineProperty(this, "userList", void 0);\n\n    _defineProperty(this, "chatRoom", void 0);\n\n    _defineProperty(this, "UserInfoMap", new Map());\n\n    this.userList = new UserList();\n    this.chatRoom = new ChatRoom();\n    this.init();\n    this.bindListener();\n  }\n  /**\r\n   * @type { Map<String, UserInfo> }\r\n   */\n\n\n  (0,createClass/* default */.Z)(ThePage, [{\n    key: "init",\n    value: function init() {\n      this.initView(); // user_list_arr.forEach(user => this.userList.appendUser(user));\n      // console.log(\'ThePage: \', this);\n\n      this.getMessageUserList();\n    }\n  }, {\n    key: "initView",\n    value: function initView() {\n      if (this.already.init.view) return;\n      var config = this.config;\n      var parent = document.querySelector(config.parent_cssSelector);\n      config.parent = parent;\n      parent.appendChild(this.userList.getElement());\n      parent.appendChild(this.chatRoom.getElement());\n      this.already.init.view = true;\n    }\n  }, {\n    key: "getMessageUserList",\n    value: function () {\n      var _getMessageUserList = _asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee() {\n        var _this = this;\n\n        var _yield$Server$getMess, status, data;\n\n        return regenerator_default().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Server.getMessageUserList();\n\n              case 2:\n                _yield$Server$getMess = _context.sent;\n                status = _yield$Server$getMess.status;\n                data = _yield$Server$getMess.data;\n\n                if (!(status !== 0)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                return _context.abrupt("return");\n\n              case 7:\n                console.log(\'getMessageUserList: \', data);\n                data.forEach(function (user) {\n                  user.uid = user.relateUid;\n\n                  _this.userList.appendUser(user);\n\n                  _this.UserInfoMap.set(user.uid, user);\n                });\n\n              case 9:\n              case "end":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getMessageUserList() {\n        return _getMessageUserList.apply(this, arguments);\n      }\n\n      return getMessageUserList;\n    }()\n  }, {\n    key: "bindListener",\n    value: function bindListener() {\n      var _this2 = this;\n\n      this.userList.setListener(\'changed_user\', function (param) {\n        // console.log(\'ThePage changed user: \', param);\n        var is_checked = param.is_checked,\n            user = param.user;\n        if (is_checked) _this2.chatRoom.notifyUserChaned(user);\n      });\n    }\n  }]);\n\n  return ThePage;\n}();\n\nvar thePage = new ThePage();\n\n//# sourceURL=webpack://liveim/./webpack_src/pages/index/index.js_+_21_modules?')},666:module=>{eval('/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  "use strict";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === "function" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || "@@iterator";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";\n  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, "");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there\'s no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don\'t have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: "normal", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: "throw", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = "suspendedStart";\n  var GenStateSuspendedYield = "suspendedYield";\n  var GenStateExecuting = "executing";\n  var GenStateCompleted = "completed";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don\'t natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    "GeneratorFunction"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    ["next", "throw", "return"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === "function" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === "GeneratorFunction"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, "GeneratorFunction");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, "__await")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === "throw") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === "object" &&\n            hasOwn.call(value, "__await")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke("next", value, resolve, reject);\n          }, function(err) {\n            invoke("throw", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke("throw", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error("Generator is already running");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === "throw") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === "next") {\n          // Setting context._sent for legacy support of Babel\'s\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === "throw") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === "return") {\n          context.abrupt("return", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === "normal") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === "throw") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = "throw";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === "throw") {\n        // Note: ["return"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator["return"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = "return";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === "throw") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // "return" to "throw", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = "throw";\n        context.arg = new TypeError(\n          "The iterator does not provide a \'throw\' method");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === "throw") {\n      context.method = "throw";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = "throw";\n      context.arg = new TypeError("iterator result is not an object");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was "throw" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was "next", forget context.arg since it has been\n      // "consumed" by the delegate iterator. If context.method was\n      // "return", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== "return") {\n        context.method = "next";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, "Generator");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers\' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn\'t happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return "[object Generator]";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = "normal";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: "root" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === "function") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel\'s\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = "next";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === "t" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === "throw") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = "throw";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = "next";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === "root") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle("end");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, "catchLoc");\n          var hasFinally = hasOwn.call(entry, "finallyLoc");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error("try statement without catch or finally");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, "finallyLoc") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === "break" ||\n           type === "continue") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = "next";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === "throw") {\n        throw record.arg;\n      }\n\n      if (record.type === "break" ||\n          record.type === "continue") {\n        this.next = record.arg;\n      } else if (record.type === "return") {\n        this.rval = this.arg = record.arg;\n        this.method = "return";\n        this.next = "end";\n      } else if (record.type === "normal" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    "catch": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === "throw") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error("illegal catch attempt");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === "next") {\n        // Deliberately forget the last sent value so that we don\'t\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   true ? module.exports : 0\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you\'ve misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you\'re not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function("r", "regeneratorRuntime = r")(runtime);\n}\n\n\n//# sourceURL=webpack://liveim/./node_modules/regenerator-runtime/runtime.js?')}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](n,n.exports,__webpack_require__),n.exports}__webpack_require__.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(n,{a:n}),n},__webpack_require__.d=(e,n)=>{for(var t in n)__webpack_require__.o(n,t)&&!__webpack_require__.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},__webpack_require__.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__(410)})();